<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">
  <!-- 自动扫描 -->
    <context:component-scan base-package="net.intellizone.demo"/>

	<!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">  
        <list>  
            <ref bean="mappingJacksonHttpMessageConverter"/>  
        </list>  
    </property> 
	</bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
    <property name="supportedMediaTypes">  
        <list>  
            <value>text/html;charset=UTF-8</value>  
        </list>  
    </property>  
</bean>  -->

	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->  
<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">  
              <!-- 设置为true以忽略对Accept Header的支持-->  
            <property name="ignoreAcceptHeader" value="true"/>  
              <!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->  
			<property name="defaultContentType" value="text/html"/>  
			  
			            <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->  
			<property name="mediaTypes">  
			    <map>  
			        <entry key="json" value="application/json" />  
			        <entry key="xml" value="application/xml" />  
			    </map>  
			</property>  
			<!-- 用于开启 /userinfo/123?format=json 的支持 -->  
			<property name="favorParameter" value="false"/>  
			<property name="viewResolvers">  
			    <list>  
			        <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"  />  
			     
			        <!-- 支持VELOCITY -->
			           <bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
				          <property name="cache" value="false" /><!--是否缓存模板-->
				          <property name="prefix" value="/"/>
				          <property name="suffix" value=".vm" />
				   
				          <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" /><!--toolbox配置文件路径-->
				          <property name="dateToolAttribute" value="date" /><!--日期函数名称-->
				         <property name="numberToolAttribute" value="number" /><!--数字函数名称-->
				          <property name="contentType" value="text/html;charset=UTF-8" />
				          <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->        
				          <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
				          <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
				          <property name="order" value="0" />
				   </bean> 
				   
				     <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
			            <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
			            <property name="prefix" value="/WEB-INF/jsp/jsp_"/>  
			            <property name="suffix" value=".jsp"></property>
			            <property name="order" value="1" />
			        </bean>  --> 
			    </list>  
			</property>  

 </bean>  

	
	
	

  <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath"><!-- 页面文件的路径,相对于webapp -->
            <value>/WEB-INF/velocity/</value>
        </property>
        <!-- Velocity属性配置 -->
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->
                <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->
                <prop key="contentType">text/html;charset=UTF-8</prop><!-- contentType -->
               <!-- <prop key="velocimacro.library">macro/macros.vm</prop>--><!-- Velocimacro 模板库的列表 -->
                <!--<prop key="eventhandler.referenceinsertion.class">com.sde.common.web.escape.reference.NoEscapeHtmlReference</prop>-->
                <prop key="eventhandler.noescape.html.match">/(?:screen_content)|(?:noescape_.*)/</prop>
            </props>
        </property>
    </bean>


<!-- 视图解析器 -->
<!--<bean id="viewResolver"
class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="viewClass"
value="org.springframework.web.servlet.view.JstlView"></property>
<property name="prefix" value="/WEB-INF/jsp/"></property>
<property name="suffix" value=".jsp"></property>
</bean>-->

<!-- 异常解析器 -->
<bean id="simpleMappingExceptionResolver"
class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
<property name="exceptionMappings">
<props>
<prop
key="org.springframework.web.multipart.MaxUploadSizeExceededException">common/fileerror</prop>
</props>
</property>
</bean>


</beans>